// Code generated by go-enum DO NOT EDIT.
// Version: 0.6.0
// Revision: 919e61c0174b91303753ee3898569a01abb32c97
// Build Date: 2023-12-18T15:54:43Z
// Built By: goreleaser

package entity

import (
	"errors"
	"fmt"
)

const (
	// ModelStatusInit is a ModelStatus of type Init.
	ModelStatusInit ModelStatus = iota
	// ModelStatusSampling is a ModelStatus of type Sampling.
	ModelStatusSampling
	// ModelStatusSampled is a ModelStatus of type Sampled.
	ModelStatusSampled
	// ModelStatusRating is a ModelStatus of type Rating.
	ModelStatusRating
	// ModelStatusTraining is a ModelStatus of type Training.
	ModelStatusTraining
	// ModelStatusTrained is a ModelStatus of type Trained.
	ModelStatusTrained
)

var ErrInvalidModelStatus = errors.New("not a valid ModelStatus")

const _ModelStatusName = "initsamplingsampledratingtrainingtrained"

// ModelStatusValues returns a list of the values for ModelStatus
func ModelStatusValues() []ModelStatus {
	return []ModelStatus{
		ModelStatusInit,
		ModelStatusSampling,
		ModelStatusSampled,
		ModelStatusRating,
		ModelStatusTraining,
		ModelStatusTrained,
	}
}

var _ModelStatusMap = map[ModelStatus]string{
	ModelStatusInit:     _ModelStatusName[0:4],
	ModelStatusSampling: _ModelStatusName[4:12],
	ModelStatusSampled:  _ModelStatusName[12:19],
	ModelStatusRating:   _ModelStatusName[19:25],
	ModelStatusTraining: _ModelStatusName[25:33],
	ModelStatusTrained:  _ModelStatusName[33:40],
}

// String implements the Stringer interface.
func (x ModelStatus) String() string {
	if str, ok := _ModelStatusMap[x]; ok {
		return str
	}
	return fmt.Sprintf("ModelStatus(%d)", x)
}

// IsValid provides a quick way to determine if the typed value is
// part of the allowed enumerated values
func (x ModelStatus) IsValid() bool {
	_, ok := _ModelStatusMap[x]
	return ok
}

var _ModelStatusValue = map[string]ModelStatus{
	_ModelStatusName[0:4]:   ModelStatusInit,
	_ModelStatusName[4:12]:  ModelStatusSampling,
	_ModelStatusName[12:19]: ModelStatusSampled,
	_ModelStatusName[19:25]: ModelStatusRating,
	_ModelStatusName[25:33]: ModelStatusTraining,
	_ModelStatusName[33:40]: ModelStatusTrained,
}

// ParseModelStatus attempts to convert a string to a ModelStatus.
func ParseModelStatus(name string) (ModelStatus, error) {
	if x, ok := _ModelStatusValue[name]; ok {
		return x, nil
	}
	return ModelStatus(0), fmt.Errorf("%s is %w", name, ErrInvalidModelStatus)
}

// MarshalText implements the text marshaller method.
func (x ModelStatus) MarshalText() ([]byte, error) {
	return []byte(x.String()), nil
}

// UnmarshalText implements the text unmarshaller method.
func (x *ModelStatus) UnmarshalText(text []byte) error {
	name := string(text)
	tmp, err := ParseModelStatus(name)
	if err != nil {
		return err
	}
	*x = tmp
	return nil
}
