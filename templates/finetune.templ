package templates

import (
	"fmt"

	"github.com/thesis-bkn/hfsd/templates/components"
	"github.com/thesis-bkn/hfsd/internal/database"
)

templ FinetuneView(models []database.Model) {
	@base() {
		@components.NavBar("finetune")
		@treeStyle()
		for i := range models {
			@swalStyle(&models[i])
		}
		<div class="flex justify-center">
			<ul class="tree">
				@tree(graph(models))
			</ul>
		</div>
	}
}

func swalFire(model *database.Model) string {
	return fmt.Sprintf(
		`
        Swal.fire(
            { template: '#model-%s' }
        ).then((result) => {
            if (result.isConfirmed) {
                Swal.fire("Changes are not saved", "", "info");
            } else if (result.isDenied) {
                window.location.replace('/inference?model=%s')
            }
        })
    `, model.ID, model.ID)
}

templ tree(modelM map[string]*database.Model, graphM map[string][]*database.Model, curModel string) {
	<li>
		<span
			class="cursor-pointer bg-violet-500 hover:bg-violet-600 active:bg-violet-700 focus:outline-none focus:ring focus:ring-violet-300"
			@click={ swalFire(modelM[curModel]) }
		>
			{ modelM[curModel].Name }
		</span>
		if len(graphM[curModel]) > 0 {
			<ul>
				for _, child := range graphM[curModel] {
					@tree(modelM, graphM, child.ID)
				}
			</ul>
		}
	</li>
}

func graph(models []database.Model) (map[string]*database.Model, map[string][]*database.Model, string) {
	graphM := make(map[string][]*database.Model)
	modelM := make(map[string]*database.Model)

	for i := range models {
		graphM[models[i].ID] = []*database.Model{}
		modelM[models[i].ID] = &models[i]
	}

	for i, model := range models {
		if model.ID == "base" || graphM[model.Parent] == nil {
			continue
		}
		graphM[model.Parent] = append(graphM[model.Parent], &models[i])
	}

	return modelM, graphM, "base"
}

templ swalStyle(model *database.Model) {
	<template id={ fmt.Sprintf("model-%s", model.ID) }>
		<swal-title>
			<span class="text-blue-600">{ model.Name }</span>
		</swal-title>
		<swal-html>
			<p>Finetune or inference using this model</p>
		</swal-html>
		<swal-button type="confirm" color="#36D399">
			Finetune
		</swal-button>
		<swal-button type="deny" color="#CC009C">
			Inference
		</swal-button>
		<swal-button type="cancel">
			Cancel
		</swal-button>
	</template>
}

templ treeStyle() {
	<style>
        .tree,
        .tree ul,
        .tree li {
            list-style: none;
            margin: 0;
            padding: 0;
            position: relative;
        }
        .tree {
            margin: 0 0 1em;
            text-align: center;
        }
        .tree,
        .tree ul {
            display: table;
        }
        .tree ul {
            width: 100%;
        }
        .tree li {
            display: table-cell;
            padding: .5em 0;
            vertical-align: top;
        }
        .tree li:before {
            outline: solid 1px #666;
            content: "";
            left: 0;
            position: absolute;
            right: 0;
            top: 0;
        }
        .tree li:first-child:before {
            left: 50%;
        }
        .tree li:last-child:before {
            right: 50%;
        }
        .tree code,
        .tree span {
            border: solid .1em #666;
            border-radius: .2em;
            display: inline-block;
            margin: 0 .2em .5em;
            padding: .2em .5em;
            position: relative;
        }
        .tree ul:before,
        .tree code:before,
        .tree span:before {
            outline: solid 1px #666;
            content: "";
            height: .5em;
            left: 50%;
            position: absolute;
        }
        .tree ul:before {
            top: -.5em;
        }
        .tree code:before,
        .tree span:before {
            top: -.55em;
        }
        .tree>li {
            margin-top: 0;
        }
        .tree>li:before,
        .tree>li:after,
        .tree>li>code:before,
        .tree>li>span:before {
            outline: none;
        }
    </style>
}
