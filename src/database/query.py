# Code generated by sqlc. DO NOT EDIT.
# versions:
#   sqlc v1.26.0
# source: query.sql
import datetime
from typing import Optional

import sqlalchemy
import sqlalchemy.ext.asyncio

from src.database import models


INSERT_SAMPLE = """-- name: insert_sample \\:exec
INSERT INTO samples (
    save_dir, resume_from, image_fn, 
    prompt_fn, created_at, finished_at
) VALUES
(
    :p1, :p2, :p3, :p4, now(), NULL
)
"""


class Querier:
    def __init__(self, conn: sqlalchemy.engine.Connection):
        self._conn = conn

    def insert_sample(self, *, save_dir: datetime.datetime, resume_from: Optional[datetime.datetime], image_fn: str, prompt_fn: str) -> None:
        self._conn.execute(sqlalchemy.text(INSERT_SAMPLE), {
            "p1": save_dir,
            "p2": resume_from,
            "p3": image_fn,
            "p4": prompt_fn,
        })


class AsyncQuerier:
    def __init__(self, conn: sqlalchemy.ext.asyncio.AsyncConnection):
        self._conn = conn

    async def insert_sample(self, *, save_dir: datetime.datetime, resume_from: Optional[datetime.datetime], image_fn: str, prompt_fn: str) -> None:
        await self._conn.execute(sqlalchemy.text(INSERT_SAMPLE), {
            "p1": save_dir,
            "p2": resume_from,
            "p3": image_fn,
            "p4": prompt_fn,
        })
